grafana:
  resources:
    requests:
      cpu: 100m

  ingress:
    enabled: true
    hosts:
    - grafana.krupcov.ru
    ingressClassName: nginx

  forceDeployDashboards: true
  defaultDashboardsEnabled: true

  dashboardProviders:
   dashboardproviders.yaml:
     apiVersion: 1
     providers:
     - name: 'default'
       orgId: 1
       folder: ''
       type: file
       disableDeletion: false
       editable: true
       options:
         path: /var/lib/grafana/dashboards/default

  additionalDataSources:
  - name: Loki
    type: loki
    access: proxy
    url: http://loki-grafana-loki-query-frontend.loki:3100

  dashboards:
    default:
      node-exporter-full:
        gnetId: 1860
        revision: 37
        datasource:
        - name: DS_PROMETHEUS
          value: Prometheus
    custom:
      spammer:
        json: |
          {{- readFile "../dashboards/spammer-dashboard.json" | nindent 10 }}
      strimzi-kafka:
        json: |
          {{- readFile "../dashboards/strimzi-kafka.json" | nindent 10 }}
      librdkafka-application:
        json: |
          {{- readFile "../dashboards/librdkafka-application.json" | nindent 10 }}

  nodeSelector:
    node.kubernetes.io/role: worker

alertmanager:
  alertmanagerSpec:
    resources:
      requests:
        cpu: 100m
    nodeSelector:
      node.kubernetes.io/role: worker

prometheus:
  prometheusSpec:
    resources:
      requests:
        cpu: 100m
    nodeSelector:
      node.kubernetes.io/role: worker

prometheusOperator:
  resources:
    requests:
      cpu: 100m
  nodeSelector:
    node.kubernetes.io/role: worker